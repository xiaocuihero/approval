using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using System.Data;
using System.Data.OleDb;
using ImportDemo;
using Microsoft.Office.Interop.Excel;
using System.Reflection;

    public partial class _Default : System.Web.UI.Page
    {
        protected void Page_Load(object sender, EventArgs e)
        {

        }
        /// <summary>
        /// 导入
        /// </summary>
        /// <param name="sender"></param>
        /// <param name="e"></param>
        protected void btnImpot_Click(object sender, EventArgs e)
        {
            //是否含有文件
            if (!this.FileUpload1.HasFile)
            {
                Page.ClientScript.RegisterClientScriptBlock(this.GetType(), "", "<script>alert('请选择导入的Excel表！');</script>");
                return;
            }
            //判断导入文件是否正确
            string Extension = System.IO.Path.GetExtension(this.FileUpload1.FileName).ToString().ToLower();
            if (Extension != ".xls" && Extension != ".xlsx")
            {
                Page.ClientScript.RegisterClientScriptBlock(this.GetType(), "", "<script>alert('您导入的Excel文件不正确，请确认后重试！');</script>");
                return;
            }
            //拼接服务器文件名
            string FileName = DateTime.Now.ToString("yyyyMMddhhmmssmmmm") + this.FileUpload1.FileName;
            //保存路径
            string savePath = Server.MapPath("Excel/") + FileName;
            //将文件保存到服务器上
            FileUpload1.SaveAs(savePath);
            GetExcelSheet(savePath, FileName);
            //将Excel中的数据放到DataTable中
            //System.Data.DataTable dt = GetExcelSheet(savePath, FileName);
            //向数据库中插入数据
            //int i = InsetData(dt);

            //提示导入成功数据
            //Page.ClientScript.RegisterClientScriptBlock(this.GetType(), "", "<script>alert('成功导入" + i + "条数据！');</script>");
        }
        /// <summary>
        /// 将Excel中的数据放到DataTable中
        /// </summary>
        /// <param name="strFileName">路径</param>
        /// <param name="strFileName">表名</param>
        /// <returns>DataTable数据</returns>
        public System.Data.DataTable GetExcelSheet(string fileUrl, string table)
        {
            //office2007之前 仅支持.xls
            //const string cmdText = "Provider=Microsoft.Jet.OLEDB.4.0;Data Source={0};Extended Properties='Excel 8.0;IMEX=1';";
            //支持.xls和.xlsx，即包括office2010等版本的   HDR=Yes代表第一行是标题，不是数据；
            string cmdText = "Provider=Microsoft.Ace.OleDb.12.0;" + "data source=" + fileUrl + ";Extended Properties='Excel 12.0; HDR=Yes; IMEX=1'";
            //const string cmdText = "Provider=Microsoft.Ace.OleDb.12.0;Data Source={0};Extended Properties='Excel 12.0; HDR=Yes; IMEX=1'";

            System.Data.DataTable dt = null;
            //建立连接
            OleDbConnection conn = new OleDbConnection(string.Format(cmdText, fileUrl));
            try
            {
                //打开连接
                if (conn.State == ConnectionState.Broken || conn.State == ConnectionState.Closed)
                {
                    conn.Open();
                }


                System.Data.DataTable schemaTable = conn.GetOleDbSchemaTable(OleDbSchemaGuid.Tables, null);
                //获取Excel的第一个Sheet名称
                string sheetName = schemaTable.Rows[0]["TABLE_NAME"].ToString().Trim();

                //查询sheet中的数据
                string strSql = "select * from [" + sheetName + "]";
                OleDbDataAdapter da = new OleDbDataAdapter(strSql, conn);
                DataSet ds = new DataSet();
                da.Fill(ds, table);
                dt = ds.Tables[0];

                return dt;
            }
            catch (Exception exc)
            {
                throw exc;
            }                                                                                                                                                                                                                                                                                                                        
            finally
            {
                conn.Close();
                conn.Dispose();
            }
            //Application app = new ApplicationClass();
            //try
            //{
            //    //让后台执行设置为不可见
            //    app.Visible = false;
            //    object missing = Missing.Value;
            //    //打开已有的工作簿
            //    Workbook wBook = app.Workbooks.Open(fileUrl,
            //       missing, missing, missing, missing, missing, missing, missing,
            //       missing, missing, missing, missing, missing, missing, missing);

            //    //取得一个工作表
            //    //如果打开了已有的工作簿,也可以这样获取工作表
            //    Worksheet wSheet = wBook.ActiveSheet as Worksheet;

            //    Range curentCell = (Range)wSheet.Cells[2, 1];  //只举例第一个单元格被合并
            //    string text = curentCell.Text.ToString();  //单元格文本
            //    bool temp = (bool)curentCell.MergeCells;  //表示本单元格是否是合并单元格

            //    Range mergeArea = curentCell.MergeArea;
            //    int count = mergeArea.Cells.Count; //合并列的个数（不分上下还是左右）                      


            //    //设置禁止弹出保存和覆盖的询问提示框
            //    app.DisplayAlerts = false;
            //    app.AlertBeforeOverwriting = false;

            //}
            //finally
            //{
            //    //确保Excel进程关闭
            //    app.Quit();
            //    app = null;
            //}

        }
        /// <summary>
        /// 向数据库插入数据
        /// </summary>
        /// <param name="dt">Excel中的DataTable数据</param>
        public int InsetData( System.Data.DataTable dt)
        {
            int i = 0;
            foreach (DataRow item in dt.Rows)
            {
                Person per = new Person();
                per.Name = item["Name"].ToString();
                per.Age = Convert.ToInt32(item["Age"].ToString());
                per.Address = item["Address"].ToString();
                per.Phone = item["Phone"].ToString();

                if (DBHelper.Add(per) == 1)
                {
                    i++;
                }
            }
            return i;
        }
    }

